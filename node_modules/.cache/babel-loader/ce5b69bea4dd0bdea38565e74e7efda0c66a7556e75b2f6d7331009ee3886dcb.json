{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/Recipe/MyRecipes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport Category from '../components/Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewRecipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const userId = sessionStorage.getItem('userId');\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch('/recipes');\n        let data = await response.json();\n        // console.log(recipes);\n        setRecipes(data.recipes);\n        console.log(recipes);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    };\n    fetch('/categories').then(response => response.json()).then(data => setCategories(data.data));\n    fetchRecipes();\n  }, []);\n\n  // useEffect(() => {\n  //   fetch('/me')\n\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log(data.revipes)\n  //       if (data && data.recipes) { // add null check here\n  //           // Filter the recipes to show only those created by the logged-in user\n\n  //           const filtered = data.recipes.filter(recipe => recipe.user_id === userId);\n  //           // console.log(filteredRecipes)\n  //           setRecipes(filtered);\n  //           console.log(data.recipes)\n\n  //         }\n  //       // const userId = data.data.id;\n  //       // const filteredRecipes = data.recipes.filter(recipe => recipe.user_id === userId);\n  //       // setRecipes(filteredRecipes);\n  //   })\n  //   //   if (data && data.data && Array.isArray(data.data)) {\n  //   //     // Filter the recipes to show only those created by the logged-in user\n  //   //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //   //     setRecipes(filteredRecipes);\n  //   //   } else {\n  //   //     // Handle errors\n  //   //     console.error('Error: Invalid response format');\n  //   //   }\n  //   // })\n  //   // .catch(error => {\n  //   //   console.error('Error fetching recipes:', error);\n  //   // });\n  //       //   .then(response => response.json())\n  //       //   .then(data => {\n  //       //     // Filter the recipes to show only those created by the logged-in user\n  //       //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //       //     setRecipes(filteredRecipes);\n  //       //   });\n  //   // const fetchRecipes = async () => {\n  //   //   try {\n  //   //     const response = await fetch('/me');\n  //   //     let data = await response.json();\n  //   //     // console.log(recipes);\n  //   //     setRecipes(data.data);\n  //   //     console.log(recipes);\n  //   //     setIsLoading(false)\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //     setIsLoading(false)\n  //   //   }\n  //   // };\n\n  //   fetch('/categories')\n  //   .then(response => response.json())\n  //   .then(data => setCategories(data.data));\n  //   // fetchRecipes();\n  // }, []);\n\n  //   useEffect(() => {\n  //     // Fetch recipes from the backend API\n  //     fetch('/recipes')\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         // Filter the recipes to show only those created by the logged-in user\n  //         const filteredRecipes = data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //         setRecipes(filteredRecipes);\n  //       });\n  //       fetch('/categories')\n  //       .then(response => response.json())\n  //       .then(data => setCategories(data.data));\n  //       fetchRecipes();\n  //     }, []);\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Prep Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Array.isArray(recipes) && recipes.map((recipe, index) => {\n        console.log(recipe, index);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.ingredients.split(\",\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.prep_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Category, {\n            category: categories.find(category => category.id === recipes.category_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)]\n        }, recipe.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewRecipes, \"/Wq6a7uzi31EF4WeAb9SQkFsxDU=\");\n_c = ViewRecipes;\nexport default ViewRecipes;\nvar _c;\n$RefreshReg$(_c, \"ViewRecipes\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Category","jsxDEV","_jsxDEV","ViewRecipes","_s","recipes","setRecipes","isLoading","setIsLoading","categories","setCategories","userId","sessionStorage","getItem","fetchRecipes","response","fetch","data","json","console","log","error","then","striped","bordered","hover","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","recipe","index","title","instructions","ingredients","split","prep_time","category","find","id","category_id","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/Recipe/MyRecipes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport Category from '../components/Category';\nfunction ViewRecipes() {\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n\n  const userId = sessionStorage.getItem('userId');\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch('/recipes');\n        let data = await response.json();\n        // console.log(recipes);\n        setRecipes(data.recipes);\n        console.log(recipes);\n        setIsLoading(false)\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false)\n      }\n    };\n\n    fetch('/categories')\n    .then(response => response.json())\n    .then(data => setCategories(data.data));\n    fetchRecipes();\n  }, []);\n\n\n  // useEffect(() => {\n  //   fetch('/me')\n\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log(data.revipes)\n  //       if (data && data.recipes) { // add null check here\n  //           // Filter the recipes to show only those created by the logged-in user\n          \n  //           const filtered = data.recipes.filter(recipe => recipe.user_id === userId);\n  //           // console.log(filteredRecipes)\n  //           setRecipes(filtered);\n  //           console.log(data.recipes)\n            \n  //         }\n  //       // const userId = data.data.id;\n  //       // const filteredRecipes = data.recipes.filter(recipe => recipe.user_id === userId);\n  //       // setRecipes(filteredRecipes);\n  //   })\n  //   //   if (data && data.data && Array.isArray(data.data)) {\n  //   //     // Filter the recipes to show only those created by the logged-in user\n  //   //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //   //     setRecipes(filteredRecipes);\n  //   //   } else {\n  //   //     // Handle errors\n  //   //     console.error('Error: Invalid response format');\n  //   //   }\n  //   // })\n  //   // .catch(error => {\n  //   //   console.error('Error fetching recipes:', error);\n  //   // });\n  //       //   .then(response => response.json())\n  //       //   .then(data => {\n  //       //     // Filter the recipes to show only those created by the logged-in user\n  //       //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //       //     setRecipes(filteredRecipes);\n  //       //   });\n  //   // const fetchRecipes = async () => {\n  //   //   try {\n  //   //     const response = await fetch('/me');\n  //   //     let data = await response.json();\n  //   //     // console.log(recipes);\n  //   //     setRecipes(data.data);\n  //   //     console.log(recipes);\n  //   //     setIsLoading(false)\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //     setIsLoading(false)\n  //   //   }\n  //   // };\n\n  //   fetch('/categories')\n  //   .then(response => response.json())\n  //   .then(data => setCategories(data.data));\n  //   // fetchRecipes();\n  // }, []);\n\n\n\n//   useEffect(() => {\n//     // Fetch recipes from the backend API\n//     fetch('/recipes')\n//       .then(response => response.json())\n//       .then(data => {\n//         // Filter the recipes to show only those created by the logged-in user\n//         const filteredRecipes = data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n//         setRecipes(filteredRecipes);\n//       });\n//       fetch('/categories')\n//       .then(response => response.json())\n//       .then(data => setCategories(data.data));\n//       fetchRecipes();\n//     }, []);\n//   }, []);\n \n  return (\n    <Table striped bordered hover>\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Instructions</th>\n        <th>Ingredients</th>\n        <th>Prep Time</th>\n        <th>Category</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n      Array.isArray(recipes) && recipes.map((recipe, index) => {\n        console.log(recipe, index);\n        return (\n                  <tr key={recipe.id}>\n                  <td>{index + 1}</td>\n                  <td>{recipe.title}</td>\n                  <td>{recipe.instructions}</td>\n                  <td>{recipe.ingredients.split(\",\")}</td>\n                  <td>{recipe.prep_time}</td>\n                  <Category category={categories.find(category => category.id === recipes.category_id)} />\n\n               \n                  </tr>\n                            )\n                          }\n                          \n                            \n                        \n                          )}\n      \n    </tbody>\n  </Table>\n  )\n}\nexport default ViewRecipes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}